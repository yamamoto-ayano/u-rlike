generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model History {
  id          String   @id @default(uuid())
  url         String
  title       String
  description String
  image       String?
  createdAt   DateTime @default(now())
  checked     Boolean  @default(false)
}

model BookmarkFolder {
  id          String     @id @default(uuid())
  name        String
  description String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  bookmarks   Bookmark[]
  edges       Edges[]
}

model Bookmark {
  id          String         @id @default(uuid())
  url         String
  title       String
  description String
  image       String?
  memo        String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  folder      BookmarkFolder @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId    String
  BookmarkSource  Edges[] @relation("BookmarkSource")
  BookmarkTarget  Edges[] @relation("BookmarkTarget")
}

model Edges {
  id         String   @id @default(uuid())
  sourceId   String
  targetId   String
  source     Bookmark @relation("BookmarkSource", fields: [sourceId], references: [id], onDelete: Cascade)
  target     Bookmark @relation("BookmarkTarget", fields: [targetId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  folder     BookmarkFolder @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId   String
  type       String
  memo       String
}

model Like {
  id          String   @id @default(uuid())
  url         String
  title       String
  description String
  image       String?
  createdAt   DateTime @default(now())
}

model Superlike {
  id          String   @id @default(uuid())
  url         String
  title       String
  description String
  image       String?
  createdAt   DateTime @default(now())
}
